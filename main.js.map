{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dialog/dialog.component.ts","./src/app/dialog/dialog.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AAEuB;AACR;;;;;AAQ3C,MAAM,YAAY;IAIvB,YAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAHrC,UAAK,GAAG,QAAQ,CAAC;IAIjB,CAAC;IAED,eAAe;QACb,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,gBAAgB,GAAG,CAAC,YAAgC,EAAE,EAAE;YAC5D,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wEAAe,EAAE;gBACvC,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE;oBACJ,KAAK,EAAE,eAAe;oBACtB,YAAY,EAAE;wBACZ,KAAK,EAAE,MAAM;wBACb,QAAQ,EAAE,CAAC,YAAY,CAAC,mBAAmB;wBAC3C,eAAe,EAAE,CAAC,IAAS,EAAE,EAAE;4BAC7B,YAAY,CAAC,mBAAmB,GAAG,IAAI,CAAC;wBAC1C,CAAC;wBACD,WAAW,EAAE,GAAG,EAAE;4BAChB,YAAY,CAAC,IAAI,EAAE,CAAC;wBACtB,CAAC;qBACF;oBACD,YAAY,EAAE;wBACZ,KAAK,EAAE,OAAO;qBACf;oBACD,SAAS,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;wBACrC,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE;oBACE,IAAI,CAAC,IAAI;oBACT,IAAI,CAAC,UAAU;oBACf,IAAI,CAAC,OAAO;aACnB;qBACF,CAAC,CAAC;iBACJ;aACF,CAAC,CAAC;QACL,CAAC;QACD,MAAM,eAAe,GAAG,GAAG,EAAE;YAC3B,OAAO,EAAC,IAAI,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,EAAC;QAC9B,CAAC;QACD,MAAM,YAAY,GAAG,YAAY,CAAC,eAAe,EAAE,CAAC;QACpD,MAAM,MAAM,GAAG,GAAG,EAAE;YAClB,YAAY,CAAC,UAAU,GAAG,eAAe,EAAE,CAAC;YAC5C,YAAY,CAAC,IAAI,CAAC,0DAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE;QACtD,CAAC;QAED,MAAM,EAAE;IACV,CAAC;IACD,eAAe;QACb,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,gBAAgB,GAAG,CAAC,YAAgC,EAAE,EAAE;YAC5D,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wEAAe,EAAE;gBACvC,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE;oBACJ,KAAK,EAAE,eAAe;oBACtB,YAAY,EAAE;wBACZ,KAAK,EAAE,MAAM;wBACb,QAAQ,EAAE,CAAC,YAAY,CAAC,mBAAmB;wBAC3C,eAAe,EAAE,CAAC,IAAS,EAAE,EAAE;4BAC7B,YAAY,CAAC,mBAAmB,GAAG,IAAI,CAAC;wBAC1C,CAAC;wBACD,WAAW,EAAE,GAAG,EAAE;4BAChB,YAAY,CAAC,IAAI,EAAE,CAAC;wBACtB,CAAC;qBACF;oBACD,YAAY,EAAE;wBACZ,KAAK,EAAE,OAAO;qBACf;oBACD,SAAS,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;wBACrC,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE;oBACE,IAAI,CAAC,IAAI;oBACT,IAAI,CAAC,UAAU;oBACf,IAAI,CAAC,OAAO;aACnB;qBACF,CAAC,CAAC;iBACJ;aACF,CAAC,CAAC;QACL,CAAC;QACD,MAAM,eAAe,GAAG,GAAG,EAAE;YAC3B,OAAO,EAAC,IAAI,EAAE,EAAC,IAAI,EAAE,GAAG,EAAC,EAAC;QAC5B,CAAC;QACD,MAAM,YAAY,GAAG,YAAY,CAAC,eAAe,EAAE,CAAC;QACpD,MAAM,MAAM,GAAG,GAAG,EAAE;YAClB,YAAY,CAAC,UAAU,GAAG,eAAe,EAAE,CAAC;YAC5C,YAAY,CAAC,IAAI,CAAC,0DAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE;QACtD,CAAC;QAED,MAAM,EAAE;IACV,CAAC;IAED,YAAY,CAAC,EAAE,OAAO,EAAqB;QACzC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;IACtB,CAAC;IACD,YAAY,CAAC,EAAE,OAAO,EAAqB;QACzC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;IACtB,CAAC;;wEAjGU,YAAY;4FAAZ,YAAY;kEAET,iEAAiB;;;;;QCdjC,4EAMwC;QAFtC,oIAAS,qBAAiB,IAAC,kGACV,wBAAoB,IADV,gGAEX,wBAAoB,IAFT;QAG3B,oEACF;QAAA,4DAAS;QAET,4EAKwC;QAFtC,oIAAS,qBAAiB,IAAC,kGACV,wBAAoB,IADV,gGAEX,wBAAoB,IAFT;QAG3B,oEACF;QAAA,4DAAS;;QAdP,oFAA2B;;;;;;;;;;;;;;ACF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACa;AACH;AACA;AACJ;AACwB;AAC/B;;AAmBvC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YATJ;YACP,uEAAa;YACb,4FAAuB;YACvB,oEAAgB;YAChB,6DAAa;YACb,wEAAe;YACf,wEAAe;YACf,oEAAa;SACd;mIAIU,SAAS,mBAflB,2DAAY;QACZ,wEAAe,aAGf,uEAAa;QACb,4FAAuB;QACvB,oEAAgB;QAChB,6DAAa;QACb,wEAAe;QACf,wEAAe;QACf,oEAAa;;;;;;;;;;;;;ACvBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;ICErD,qFAA0E;IACxE,oEAAmC;IACrC,4DAAkB;;;IAFoC,+EAAmB;IAClE,0DAAuB;IAAvB,iJAAuB;;ADkB3B,MAAM,eAAe;IAE1B,YAA4C,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEjE,QAAQ;IACR,CAAC;IAED,IAAI,cAAc;;QAChB,mBAAO,IAAI,CAAC,IAAI,0CAAE,YAAY,0CAAE,QAAQ,CAAC;IAC3C,CAAC;IAED,WAAW;;QACT,OAAO,iBAAI,CAAC,IAAI,0CAAE,YAAY,0CAAE,WAAW,OAAM,SAAS,CAAC;IAC7D,CAAC;IAED,YAAY,CAAC,IAAS;;QACpB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxC,mBAAO,IAAI,CAAC,IAAI,0CAAE,YAAY,0CAAE,eAAe,CAAC,IAAI,EAAE;IACxD,CAAC;;8EAlBU,eAAe,kEAEN,wEAAe;+FAFxB,eAAe;QCtB5B,wEAAqB;QAAA,uDAAe;QAAA,4DAAK;QACzC,yEAAwB;QACtB,wFAA6F;QAAzE,6KAAmB,qCAAiC,IAAC;QACvE,mIAEkB;QACpB,4DAAqB;QACvB,4DAAM;QACN,yEAAwB;QACtB,4EAAoC;QAAA,uDAA6B;QAAA,4DAAS;QAC1E,4EAAwF;QAAxB,uIAAS,iBAAa,IAAC;QAAC,uDAA6B;QAAA,4DAAS;QAChI,4DAAM;;QAXe,0DAAe;QAAf,yGAAe;QAEwC,0DAAkB;QAAlB,2EAAkB;QACxD,0DAAkB;QAAlB,iHAAkB;QAMlB,0DAA6B;QAA7B,6JAA6B;QAC7B,0DAA2B;QAA3B,wFAA2B;QAAyB,0DAA6B;QAA7B,6JAA6B;;;;;;;;;;;;;;ACTvH;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, QueryList, ViewChildren} from '@angular/core';\nimport {tap} from \"rxjs/operators\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {DialogComponent} from \"./dialog/dialog.component\";\nimport {XMLESignDirective} from \"@utp/e-sign-lib\";\nimport {CertificateModel} from \"@utp/e-sign-lib/lib/models\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'e-sign';\n  @ViewChildren(XMLESignDirective) xmlESignList: QueryList<XMLESignDirective>;\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  openSignDialog1() {\n    const xmlDirective = this.xmlESignList.get(0);\n    const getDialogContext = (certificates: CertificateModel[]) => {\n      return this.dialog.open(DialogComponent, {\n        width: '800px',\n        data: {\n          title: 'Sign dialog 1',\n          actionButton: {\n            label: 'Sign',\n            disabled: !xmlDirective.selectedCertificate,\n            selectionAction: (data: any) => {\n              xmlDirective.selectedCertificate = data;\n            },\n            clickAction: () => {\n              xmlDirective.sign();\n            }\n          },\n          cancelButton: {\n            label: 'Close',\n          },\n          listItems: certificates.map((cert) => ({\n            data: cert,\n            view: `\n            <span>${cert.name}</span>\n            <span>${cert.issuerName}</span>\n            <span>${cert.validTo}</span>\n            `\n          }))\n        }\n      });\n    }\n    const getPreparedJson = () => {\n      return {json: {data: 'xxx'}}\n    }\n    const certificates = xmlDirective.getCertificates();\n    const action = () => {\n      xmlDirective.jsonObject = getPreparedJson();\n      certificates.pipe(tap(getDialogContext)).subscribe()\n    }\n\n    action()\n  }\n  openSignDialog2() {\n    const xmlDirective = this.xmlESignList.get(1);\n    const getDialogContext = (certificates: CertificateModel[]) => {\n      return this.dialog.open(DialogComponent, {\n        width: '400px',\n        data: {\n          title: 'Sign dialog 2',\n          actionButton: {\n            label: 'Sign',\n            disabled: !xmlDirective.selectedCertificate,\n            selectionAction: (data: any) => {\n              xmlDirective.selectedCertificate = data;\n            },\n            clickAction: () => {\n              xmlDirective.sign();\n            }\n          },\n          cancelButton: {\n            label: 'Close',\n          },\n          listItems: certificates.map((cert) => ({\n            data: cert,\n            view: `\n            <span>${cert.name}</span>\n            <span>${cert.issuerName}</span>\n            <span>${cert.validTo}</span>\n            `\n          }))\n        }\n      });\n    }\n    const getPreparedJson = () => {\n      return {json: {data: 123}}\n    }\n    const certificates = xmlDirective.getCertificates();\n    const action = () => {\n      xmlDirective.jsonObject = getPreparedJson();\n      certificates.pipe(tap(getDialogContext)).subscribe()\n    }\n\n    action()\n  }\n\n  getSignedXML({ payload }: {payload: string}) {\n    console.log(payload)\n  }\n  getSignError({ payload }: {payload: string}) {\n    console.log(payload)\n  }\n}\n","<button\n  xml-e-sign\n  mat-raised-button\n  [isNeedDownloadFile]=\"true\"\n  (click)=\"openSignDialog1()\"\n  (successResult)=\"getSignedXML($event)\"\n  (failedResult)=\"getSignError($event)\">\n  Sign 1\n</button>\n\n<button\n  xml-e-sign\n  mat-raised-button\n  (click)=\"openSignDialog2()\"\n  (successResult)=\"getSignedXML($event)\"\n  (failedResult)=\"getSignError($event)\">\n  Sign 2\n</button>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DialogComponent } from './dialog/dialog.component';\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {ESignerModule} from \"@utp/e-sign-lib\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ESignerModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatListModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\n\nexport interface DialogData {\n  title: string;\n  listItems: {view: string, data: any}[];\n  actionButton: {\n    label: string;\n    disabled: boolean;\n    selectionAction: (value: any) => {};\n    clickAction: () => {};\n  };\n  cancelButton: {\n    label: string;\n  };\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit(): void {\n  }\n\n  get actionDisabled() {\n    return this.data?.actionButton?.disabled;\n  }\n\n  clickAction() {\n    return this.data?.actionButton?.clickAction() || undefined;\n  }\n\n  selectAction(data: any) {\n    this.data.actionButton.disabled = false;\n    return this.data?.actionButton?.selectionAction(data);\n  }\n\n}\n","<h1 mat-dialog-title>{{data?.title}}</h1>\n<div mat-dialog-content>\n  <mat-selection-list (selectionChange)=\"selectAction($event.option.value)\" [multiple]=\"false\">\n    <mat-list-option *ngFor=\"let item of data?.listItems\" [value]=\"item.data\">\n      <div [innerHTML]=\"item.view\"></div>\n    </mat-list-option>\n  </mat-selection-list>\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>{{data?.cancelButton?.label}}</button>\n  <button mat-button mat-dialog-close [disabled]=\"actionDisabled\" (click)=\"clickAction()\">{{data?.actionButton?.label}}</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
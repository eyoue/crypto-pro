{"version":3,"sources":["../../../projects/e-sign-lib/src/lib/models/crypto-pro-plugin.ts","../../../projects/e-sign-lib/src/lib/models/error-crypto-pro.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/e-sign-lib/src/lib/crypto-pro.service.ts","../../../projects/e-sign-lib/src/lib/mapper/certificates.mapper.ts","../../../projects/e-sign-lib/src/lib/default-data/certificates.ts","../../../projects/e-sign-lib/src/lib/xml-e-sign.directive.ts","../../../projects/e-sign-lib/src/lib/e-signer.module.ts"],"names":["ErrorCryptoPro","CryptoProPluginInfo","_a","cadesVersion","cspVersion","this","pluginVersion","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","create","CryptoProService","isPlugin","window","cadesplugin_skip_extension_install","prototype","isPluginValid","_this","from","isValidSystemSetup","pipe","tap","catchError","err","getPluginInfo","getSystemInfo","map","info","getUserCertificates","Observable","observer","subscribe","createFileSignature","thumbprint","fileBlob","createFileDetachedSignature","createXMLSignature","unencryptedMessage","createXMLSignaturePromise","arrayBuffer","data","createHash","hash","createDetachedSignature","Injectable","CertificatesMapper","src","issuerName","name","validFrom","validTo","matches","match","isValid","EMPTY_CERTIFICATE","XMLESignDirective","cryptoService","signInProgress","signEvent$","BehaviorSubject","isTestingMode","localStorage","getItem","rootField","jsonObject","isNeedDownloadFile","successResult","EventEmitter","failedResult","getXMLTemplate","b64cert","signMethod","digestMethod","listenSignEvents","keyEvent","event","altKey","code","setItem","String","console","log","filter","response","status","payload","Success","emit","selectedCertificate","downloadFile","class","checkPlugin","PluginNotFined","onCertificateSelected","certificate","getCertificates","of","iif","certificates","c","error","throwError","text","filename","pom","document","createElement","bb","Blob","type","setAttribute","URL","createObjectURL","dataset","downloadurl","download","href","join","draggable","classList","add","click","remove","defineProperty","JsonToXML.parse","replace","sign","xmlData","jsonToXml","signXML","sCertName","that","cadesplugin","async_spawn","args","alert","CreateObjectAsync","oStore","Open","Certificates","Find","oCertificates","Count","CertificateNotFound","Item","oCertificate","Close","PublicKey","Algorithm","Value","algoOid","SignNotInGOST","Export","sContent","oSigner","propset_Certificate","propset_CheckCertificate","oSignedXML","propset_Content","propset_SignatureType","sSignedMessage","Sign","SignError","getLastError","err_1","message","Directive","selector","exportAs","Input","Output","HostListener","NgModule","imports","CommonModule","providers","declarations","exports"],"mappings":"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","sourcesContent":["export class CryptoProPluginInfo {\n  pluginVersion: string;\n  cspVersion: string;\n\n  constructor({ cadesVersion, cspVersion }: {cadesVersion: string, cspVersion: string}) {\n    this.pluginVersion = cadesVersion;\n    this.cspVersion = cspVersion;\n  }\n}\n","export enum ErrorCryptoPro {\n  CertificateNotFound,\n  PluginNotFined,\n  SignNotInGOST,\n  SignError,\n  Success\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {from, Observable} from 'rxjs';\nimport {\n  createDetachedSignature,\n  createHash,\n  createXMLSignature,\n  getSystemInfo,\n  getUserCertificates,\n  isValidSystemSetup\n} from \"@epsr/crypto-pro\";\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {CryptoProPluginInfo} from \"./models\";\n\n\n@Injectable()\nexport class CryptoProService {\n\n  isPlugin = false;\n\n  constructor() {\n    // Отключить модальное окно с просьбой скачать плагин (встроенное в cadesplugin)\n    if ('cadesplugin_skip_extension_install' in window) {\n      //@ts-ignore\n      window.cadesplugin_skip_extension_install = true;\n    }\n  }\n\n  isPluginValid(): Observable<boolean> {\n    return from(isValidSystemSetup()).pipe(tap(\n      (value) => this.isPlugin = value,\n      catchError(err => {\n        this.isPlugin = false;\n        return err;\n      })\n    ));\n  }\n\n  getPluginInfo(): Observable<CryptoProPluginInfo> {\n    return from(getSystemInfo()).pipe(\n      map(info => new CryptoProPluginInfo(info))\n    );\n  }\n\n  getUserCertificates(): Observable<any[]> {\n    return new Observable(observer => from(getUserCertificates(true))\n      .subscribe(observer));\n  }\n\n  createFileSignature(thumbprint: string, fileBlob: Blob): Observable<any> {\n    return new Observable(observer => from(this.createFileDetachedSignature(thumbprint, fileBlob))\n      .subscribe(observer));\n  }\n\n  createXMLSignature(thumbprint: string, unencryptedMessage: string): Observable<any> {\n    return new Observable(observer => from(this.createXMLSignaturePromise(thumbprint, unencryptedMessage))\n      .subscribe(observer));\n  }\n\n  private async createXMLSignaturePromise(thumbprint: string, unencryptedMessage: string) {\n    return await createXMLSignature(thumbprint, unencryptedMessage);\n  }\n\n  private async createFileDetachedSignature(thumbprint: string, fileBlob: Blob) {\n    const data = await fileBlob.arrayBuffer();\n    const hash = await createHash(data);\n    return await createDetachedSignature(thumbprint, hash);\n  }\n}\n","import { Certificate } from '@epsr/crypto-pro';\nimport {CertificateModel} from \"../models\";\n\nexport class CertificatesMapper {\n\n  static map(src: Certificate): CertificateModel {\n    if (!src) { return null; }\n    const {\n      issuerName,\n      name,\n      thumbprint,\n      validFrom,\n      validTo\n    } = src;\n\n    const matches = issuerName.match(/CN=([^,+]*)/);\n    const normalizedName = (matches && matches.length > 0)\n      ? matches[1]\n      : issuerName;\n\n    return {\n      issuerName: normalizedName,\n      isValid: true,\n      name,\n      thumbprint,\n      validFrom,\n      validTo\n    };\n  }\n}\n","export const EMPTY_CERTIFICATE = {\n  issuerName: 'Тестовый сертификат',\n  isValid: true,\n  name: 'Test Certificate',\n  thumbprint: 'A2C5DF002CF2260D13D38186AE8C99C9BE660602',\n  validFrom: '2021-04-05T16:35:09.000Z',\n  validTo: '2021-07-05T16:45:09.000Z'\n};\n","import {Directive, EventEmitter, HostListener, Input, Output} from '@angular/core';\nimport {BehaviorSubject, iif, Observable, of, throwError} from \"rxjs\";\nimport {catchError, filter, map, tap} from \"rxjs/operators\";\nimport * as JsonToXML from \"js2xmlparser\";\nimport {CryptoProService} from \"./crypto-pro.service\";\nimport {CertificatesMapper} from \"./mapper/certificates.mapper\";\nimport {EMPTY_CERTIFICATE} from \"./default-data/certificates\";\nimport {CertificateModel, ErrorCryptoPro, ISignResult} from \"./models\";\n\n@Directive({\n  selector: '[xml-e-sign]',\n  exportAs: 'xmlESign'\n})\nexport class XMLESignDirective {\n\n  /**\n   * @description Список сертификатов\n   */\n  certificates: CertificateModel[];\n\n  /**\n   * @description Выбранный сертификат\n   */\n  selectedCertificate: CertificateModel;\n\n  /**\n   * @description Плагин рабочий\n   */\n  isPluginValid = false;\n\n  /**\n   * @description Подписть в процессе\n   */\n  signInProgress = false;\n\n  /**\n   * @description События подписи (ошибки или успех)\n   */\n  signEvent$ = new BehaviorSubject<any>(null);\n\n  /**\n   * @description Флаг тестового режима (Alt + S)\n   */\n  isTestingMode = localStorage.getItem('SIGN_XML_TESTING_MODE') === 'true';\n\n  /**\n   * @description Блок в который будет положен распарсенный объект XML\n   */\n  @Input()\n  rootField = 'html';\n\n  /**\n   * @description Исходный объект\n   */\n  @Input()\n  jsonObject = {};\n\n  /**\n   * @description Флаг скачивания файла при подписи\n   */\n  @Input()\n  isNeedDownloadFile = false;\n\n  /**\n   * @description События успеха\n   */\n  @Output()\n  successResult = new EventEmitter<ISignResult>(null);\n\n  /**\n   * @description События ошибок\n   */\n  @Output()\n  failedResult = new EventEmitter<ISignResult>(null);\n\n  /**\n   * @description Вход в режим тестировщика\n   * Если не установлен плагин то Alt + S\n   * @param event\n   */\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if (event.altKey && event.code === 'KeyS') {\n      this.isTestingMode = !this.isTestingMode;\n      localStorage.setItem('SIGN_XML_TESTING_MODE', String(this.isTestingMode));\n      console.log('SIGN_XML_TESTING_MODE: ', this.isTestingMode ? 'on' : 'off');\n    }\n  }\n\n  constructor(private cryptoService: CryptoProService) {\n    this.listenSignEvents();\n  }\n\n  /**\n   * @description слушатель событий подписи\n   * Внутри observable - в него пушатся события успеха или ошибки\n   * Тут они обрабатываются\n   * @private\n   */\n  public listenSignEvents() {\n    return this.signEvent$\n      .pipe(\n        filter(response => response),\n        tap((response) => {\n          const {status, payload} = response;\n          this.signInProgress = false;\n          if (status === ErrorCryptoPro.Success) {\n            this.successResult.emit({status, payload});\n            this.selectedCertificate = null;\n            if (this.isNeedDownloadFile) {\n              this.downloadFile(payload, 'signed.xml');\n            }\n            return;\n          } else {\n            // обработка ошибок\n            if (this.selectedCertificate) {\n              this.selectedCertificate.isValid = false;\n              this.selectedCertificate.class = 'disabled';\n            }\n            this.failedResult.emit({status, payload});\n            return;\n          }\n        }),\n      ).subscribe();\n  }\n\n  /**\n   * @description Проверить наличие плагина\n   */\n  checkPlugin() {\n    this.isPluginValid = this.cryptoService.isPlugin;\n\n    if (!this.isPluginValid && !this.isTestingMode) {\n      this.signEvent$.next({\n        status: ErrorCryptoPro.PluginNotFined,\n        payload: 'Требуется  КриптоПро ЭЦП Browser plug-in и установленная ЭЦП'\n      });\n    }\n  }\n\n  /**\n   * @description Если сертификат выбран\n   * @param certificate\n   */\n  onCertificateSelected(certificate: CertificateModel): void {\n    this.selectedCertificate = certificate;\n  }\n\n  /**\n   * @description Получить список сертификатов\n   */\n  getCertificates(): Observable<any> {\n    if (!this.jsonObject) {\n      return of(null);\n    }\n    const successFn = () => {\n      return this.cryptoService.getUserCertificates();\n    };\n    const failFn = () => {\n      return of(this.isTestingMode ? [EMPTY_CERTIFICATE] : []);\n    };\n    const action = () => {\n      this.checkPlugin();\n      return iif(() => this.isPluginValid,\n        successFn(),\n        failFn()\n      ).pipe(\n        map((certificates: any[]) => certificates.map(c => CertificatesMapper.map(c))),\n        tap(certificates => {\n          this.certificates = certificates;\n        }),\n        catchError(error => {\n          this.certificates = [];\n          this.signEvent$.next({\n            status: ErrorCryptoPro.PluginNotFined,\n            payload: 'Требуется  КриптоПро ЭЦП Browser plug-in и установленная ЭЦП'\n          });\n          return throwError(error);\n        })\n      );\n    };\n    return action();\n  }\n\n  /**\n   *\n   * @param text - содержимое файла (строка)\n   * @param filename - имя файла\n   * @private\n   */\n  private downloadFile(text: string, filename = 'filename.xml') {\n    const pom = document.createElement('a');\n    const bb = new Blob([text], {type: 'text/plain'});\n\n    pom.setAttribute('href', window.URL.createObjectURL(bb));\n    pom.setAttribute('download', filename);\n\n    pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':');\n    pom.draggable = true;\n    pom.classList.add('dragout');\n\n    pom.click();\n    pom.remove();\n  }\n\n  /**\n   * @description пользовательский JSON в XML (без мета инфы что это xml)\n   */\n  get jsonToXml() {\n    return JsonToXML.parse(this.rootField, this.jsonObject).replace('<?xml version=\\'1.0\\'?>\\n', '');\n  }\n\n  /**\n   * @description Генерим xml, и отдаем на подпись - если мы в режиме тестирования\n   * сразу отдаем xml (буд-то он подписан)\n   */\n  public sign() {\n    const xmlData = this.jsonToXml;\n    this.signInProgress = true;\n    if (!this.selectedCertificate || this.selectedCertificate.thumbprint === EMPTY_CERTIFICATE.thumbprint) {\n      const response = this.isTestingMode ?\n        {status: ErrorCryptoPro.Success, payload: this.getXMLTemplate(xmlData, '', '', '')} :\n        {\n          status: ErrorCryptoPro.PluginNotFined,\n          payload: 'Требуется  КриптоПро ЭЦП Browser plug-in и установленная ЭЦП'\n        };\n      this.signEvent$.next(response);\n      return;\n    } else {\n      this.signXML(this.selectedCertificate.thumbprint, xmlData);\n    }\n  }\n\n  /**\n   *\n   * @param body - тело xml с данными пользователя (строка)\n   * @param b64cert - сертификат (строка)\n   * @param signMethod - метод подписи (строка)\n   * @param digestMethod - что-то для канонизации XML (строка)\n   */\n  getXMLTemplate = (body: string, b64cert: string, signMethod: string, digestMethod: string) => {\n    return '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' +\n      '<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:u=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">' +\n      '    <s:Header>' +\n      '        <o:Security s:mustUnderstand=\"1\" xmlns:o=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\" s:actor=\"http://smev.gosuslugi.ru/actors/smev\">' +\n      '            <o:BinarySecurityToken u:Id=\"uuid-ee82d445-758b-42cb-996c-666b74b60022-2\" ValueType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3\" EncodingType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\">'\n      + b64cert +\n      '</o:BinarySecurityToken>' +\n      '            <Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">' +\n      '                <SignedInfo>' +\n      '                    <CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />' +\n      '                    <SignatureMethod Algorithm=\"' + signMethod + '\"/>' +\n      '                    <Reference URI=\"#_1\">' +\n      '                        <Transforms>' +\n      '                            <Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />' +\n      '                        </Transforms>' +\n      '                        <DigestMethod Algorithm=\"' + digestMethod + '\"/>' +\n      '                        <DigestValue></DigestValue>' +\n      '                    </Reference>' +\n      '                </SignedInfo>' +\n      '                <SignatureValue></SignatureValue>' +\n      '                <KeyInfo>' +\n      '                    <o:SecurityTokenReference>' +\n      '                    <o:Reference ValueType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3\" URI=\"#uuid-ee82d445-758b-42cb-996c-666b74b60022-2\" />' +\n      '                    </o:SecurityTokenReference>' +\n      '                </KeyInfo>' +\n      '            </Signature>' +\n      '        </o:Security>' +\n      '    </s:Header>' +\n      '    <s:Body u:Id=\"_1\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">' +\n      body +\n      '    </s:Body>' +\n      '</s:Envelope>';\n  }\n\n  /**\n   *\n   * @param sCertName - имя сертификата  (строка)\n   * @param body - строка, которая допишется в xml  (строка)\n   * @private\n   */\n  private signXML(sCertName: string, body: string) {\n    const CAPICOM_CURRENT_USER_STORE = 2;\n    const CAPICOM_MY_STORE = 'My';\n    const CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED = 2;\n    const CADESCOM_CONTAINER_STORE = 100;\n    const CAPICOM_CERTIFICATE_FIND_SHA1_HASH = 0;\n    const CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME = 1;\n    const CADESCOM_XML_SIGNATURE_TYPE_TEMPLATE = 2;\n    const CADESCOM_ENCODE_BASE64 = 0;\n\n    const run = () => {\n      const that = this;\n      // @ts-ignore\n      cadesplugin.async_spawn(function* (args) {\n        // Здесь следует заполнить SubjectName сертификата\n        // let sCertName = oCertName.value;\n\n        if ('' === sCertName) {\n          alert('Введите имя сертификата (CN).');\n          return;\n        }\n\n        // Ищем сертификат для подписи\n        // @ts-ignore\n        const oStore = yield cadesplugin.CreateObjectAsync('CAdESCOM.Store');\n        yield oStore.Open(CAPICOM_CURRENT_USER_STORE, CAPICOM_MY_STORE,\n          CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED, CADESCOM_CONTAINER_STORE);\n\n        const oStoreCerts = yield oStore.Certificates;\n        const oCertificates = yield oStoreCerts.Find(\n          CAPICOM_CERTIFICATE_FIND_SHA1_HASH, sCertName);\n        const certsCount = yield oCertificates.Count;\n        if (certsCount === 0) {\n          that.signEvent$.next({status: ErrorCryptoPro.CertificateNotFound, payload: sCertName});\n          // alert(\"Certificate not found: \" + sCertName);\n          return;\n        }\n        const oCertificate = yield oCertificates.Item(1);\n        yield oStore.Close();\n\n        const oPublicKey = yield oCertificate.PublicKey();\n        const oAlgorithm = yield oPublicKey.Algorithm;\n        const algoOid = yield oAlgorithm.Value;\n        let signMethod = '';\n        let digestMethod = '';\n        if (algoOid === '1.2.643.7.1.1.1.1') {   // алгоритм подписи ГОСТ Р 34.10-2012 с ключом 256 бит\n          signMethod = 'urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102012-gostr34112012-256';\n          digestMethod = 'urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34112012-256';\n        } else if (algoOid === '1.2.643.7.1.1.1.2') {   // алгоритм подписи ГОСТ Р 34.10-2012 с ключом 512 бит\n          signMethod = 'urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102012-gostr34112012-512';\n          digestMethod = 'urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34112012-512';\n        } else if (algoOid === '1.2.643.2.2.19') {  // алгоритм ГОСТ Р 34.10-2001\n          signMethod = 'urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102001-gostr3411';\n          digestMethod = 'urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr3411';\n        } else {\n          const errormes = 'Поддерживается XML подпись сертификатами только с алгоритмом ГОСТ Р 34.10-2012, ГОСТ Р 34.10-2001';\n          that.signEvent$.next({status: ErrorCryptoPro.SignNotInGOST, payload: errormes});\n          // alert(errormes);\n        }\n\n        let b64cert = yield oCertificate.Export(CADESCOM_ENCODE_BASE64);\n        b64cert = b64cert.replace(/[\\r\\n]/g, '');\n\n        // В шаблоне документа обязательно должны присутствовать следующие элементы:\n        // BinarySecurityToken - сертификат ключа подписи в кодировке BASE64\n        //                       атрибут Id должен содержать уникальный идентификатор\n        //                       сертификата в документе\n        // Signature - элемент с описанием свойств подписи:\n        //     SignedInfo - информация о подписываемых элементах:\n        //         CanonicalizationMethod - алгоритм приведения к каноническому виду.\n        //                                  Для СМЭВ \"http://www.w3.org/2001/10/xml-exc-c14n#\"\n        //         SignatureMethod - идентификатор алгоритма подписи.\n        //                           Для СМЭВ \"http://www.w3.org/2001/04/xmldsig-more#gostr34102001-gostr3411\"\n        //         Reference - атрибут URI должен содержать ссылку на подписываемые элементы в вашем документе:\n        //             Transforms - преобразования, которые следует применить к подписываемым элементам.\n        //                          В примере - приведение к каноническому виду.\n        //             DigestMethod - идентификатор алгоритма хэширования.\n        //                            Для СМЭВ \"http://www.w3.org/2001/04/xmldsig-more#gostr3411\"\n        //             DigestValue - Хэш-значение подписываемых элементов. Данный элемент следует оставить пустым.\n        //                           Его значение будет заполнено при создании подписи.\n        //     SignatureValue - значение подписи. Данный элемент следует оставить пустым.\n        //                      Его значение будет заполнено при создании подписи.\n        //     KeyInfo - информация о сертификате ключа подписи\n        //         SecurityTokenReference - ссылка на сертификат\n        //             Reference - атрибут ValueType должен содержать значение\n        //                         \"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3\"\n        //                         Атрибут URI должен содержать ссылку на уникальный идентификатор\n        //                         сертификата (такой же, как указан в элементе BinarySecurityToken)\n        const sContent = that.getXMLTemplate(body, b64cert, signMethod, digestMethod);\n\n        // Создаем объект CAdESCOM.CPSigner\n        // @ts-ignore\n        const oSigner = yield cadesplugin.CreateObjectAsync('CAdESCOM.CPSigner');\n        yield oSigner.propset_Certificate(oCertificate);\n        yield oSigner.propset_CheckCertificate(true);\n\n        // Создаем объект CAdESCOM.SignedXML\n        // @ts-ignore\n        const oSignedXML = yield cadesplugin.CreateObjectAsync('CAdESCOM.SignedXML');\n        yield oSignedXML.propset_Content(sContent);\n\n        // Указываем тип подписи - в данном случае по шаблону\n        yield oSignedXML.propset_SignatureType(CADESCOM_XML_SIGNATURE_TYPE_TEMPLATE);\n\n        let sSignedMessage = '';\n        try {\n          sSignedMessage = yield oSignedXML.Sign(oSigner);\n          that.signEvent$.next({status: ErrorCryptoPro.Success, payload: sSignedMessage});\n        } catch (err) {\n          // @ts-ignore\n          that.signEvent$.next({status: ErrorCryptoPro.SignError, payload: cadesplugin.getLastError(err.message)});\n          // alert(\"Failed to create signature. Error: \" + cadesplugin.getLastError(err));\n          return;\n        }\n        // Полученный подписанный XML-документ должен проходить проверку на сайте СМЭВ\n        // console.log(sSignedMessage);\n\n\n        // Verification\n\n        // Создаем объект CAdESCOM.SignedXML\n        // @ts-ignore\n        // let oSignedXML2 = yield cadesplugin.CreateObjectAsync(\"CAdESCOM.SignedXML\");\n\n        // try {\n        //   yield oSignedXML2.Verify(sSignedMessage);\n        //   alert(\"Signature verified\");\n        // } catch (err) {\n        //   // @ts-ignore\n        //   alert(\"Failed to verify signature. Error: \" + cadesplugin.getLastError(err));\n        //   return false;\n        // }\n      });\n    };\n\n    run();\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CryptoProService} from \"./crypto-pro.service\";\nimport {XMLESignDirective} from \"./xml-e-sign.directive\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [CryptoProService],\n  declarations: [XMLESignDirective],\n  exports: [XMLESignDirective]\n})\nexport class ESignerModule {\n  constructor(private cryptoService: CryptoProService ) {\n    this.cryptoService.isPluginValid().subscribe()\n  }\n}\n"]}